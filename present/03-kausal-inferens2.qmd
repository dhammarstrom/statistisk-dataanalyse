---
title: "Arbeidsfysiologisk metode og Statistikk"
subtitle: "Kausal inferens"
format:
  revealjs:
    theme: sky
    embed-resources: true
standalone: true
bibliography: present-references.bib
editor_options: 
  chunk_output_type: console
---


```{r}
#| echo: false
#| message: false
#| warning: false
#| fig-width: 5
#| fig-height: 5

library(ggtext); library(tidyverse);  library(ggdag); library(cowplot)



## FORK
fork_coords <-
  tibble(name = c("X", "Y", "Z"),
         x    = c(1, 3, 2),
         y    = c(1, 1, 2))

# save our DAG
fork_dag <-
  dagify(Y ~ Z,
         X ~ Z,
         coords = fork_coords)

## Pipe
pipe_coords <-
  tibble(name = c("X", "Y", "Z"),
         x    = c(1, 3, 2),
         y    = c(2, 1, 1.5))

# save our DAG
pipe_dag <-
  dagify(Y ~ Z,
         Z ~ X,
         coords = pipe_coords)


## Collider
collider_coords <-
  tibble(name = c("X", "Y", "Z"),
         x    = c(1, 3, 2),
         y    = c(1, 1, 2))

# save our DAG
collider_dag <-
  dagify(Z ~ Y,
         Z ~ X,
         coords = collider_coords)

## Descendant
des_coords <-
  tibble(name = c("X", "Y", "Z", "D"),
         x    = c(1, 3, 2, 2),
         y    = c(1, 1, 2, 1.2))

# save our DAG
des_dag <-
  dagify(Z ~ Y,
         Z ~ X,
         D ~ Z,
         coords = des_coords)



# plot 
fork <- fork_dag %>%
  tidy_dagitty() %>%

  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_dag_point(alpha = 1, size = 12, color = "white") +
  geom_dag_text(color = "black") +
  geom_dag_edges() + 
  theme_dag() + 
    scale_y_continuous(limits = c(0.9, 2.2)) +
  theme() + 
  labs(title = "Gaffel")

pipe <- pipe_dag %>%
  tidy_dagitty() %>%

  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_dag_point(alpha = 1, size = 12, color = "white") +
  geom_dag_text(color = "black") +
  geom_dag_edges() + 
  theme_dag() + 
    scale_y_continuous(limits = c(0.9, 2.2)) +

  labs(title = "R&#248;r") +
    theme(plot.title = element_markdown()) 


collider <- collider_dag %>%
tidy_dagitty() %>%

  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_dag_point(alpha = 1, size = 12, color = "white") +
  geom_dag_text(color = "black") +
  geom_dag_edges() + 
  theme_dag() + 
    scale_y_continuous(limits = c(0.9, 2.2)) +

  labs(title = "Collider") +
    theme(plot.title = element_markdown()) 


des <- des_dag %>%
  tidy_dagitty() %>%

  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_dag_point(alpha = 1, size = 12, color = "white") +
  geom_dag_text(color = "black") +
  geom_dag_edges() + 
  theme_dag() + 
    scale_y_continuous(limits = c(0.9, 2.2)) +

  labs(title = "Etterkommer") +
    theme(plot.title = element_markdown()) 



plot_grid(fork, pipe, collider, des, ncol = 2)



```

## Simulere kausal inferens

```
z1 <- rnorm(n = 100, mean = 0, sd = 1)
```

::: {.fragment}
```
x <- rnorm(n = 100, mean = z1, sd = 0.2)
```
:::
::: {.fragment}
```
y <- rnorm(n = 100, mean = z1, sd = 0.2)
```
:::


::: {.fragment}

```{r}
#| fig-width: 4
#| fig-height: 4
#| echo: false
#| message: false
#| warning: false
#| fig-align: center


fork


```

:::

## Simulere kausal inferens

::: {.fragment}
```
z2 <- rnorm(n = 100, mean = x + y, sd = 0.2)
```
:::

::: {.fragment}



```{r}
#| fig-width: 4
#| fig-height: 4
#| echo: false
#| message: false
#| warning: false
#| fig-align: center


collider



```

:::

## Simulere kausal inferens


::: {.fragment}
```
x2 <- rnorm(n = 100, mean = x, sd = 1)
```
:::


::: {.fragment}
```
z3 <- rnorm(n = 100, mean = x2, sd = 0.2)
```
:::

::: {.fragment}
```
y2 <- rnorm(n = 100, mean = z3, sd = 0.2)
```
:::


::: {.fragment}

```{r}
#| fig-width: 5
#| fig-height: 5
#| echo: false
#| message: false
#| warning: false
#| fig-align: center



## FORK
system_coords <-
  tibble(name = c("x", "y", "z1", "z2", "x2","z3", "y2"),
         x    = c(1, 3, 2, 2, 1, 2, 3),
         y    = c(1, 1, 2, 1.5, 0.5, 0.5, 0.5))

# save our DAG
system_dag <-
  dagify(x ~ z1,
         y ~ z1,
         z2 ~ x + y, 
         x2 ~ x,
         z3 ~ x2,
         y2 ~ z3,
         coords = system_coords)




system_dag %>% 
  tidy_dagitty() %>%

  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_dag_point(alpha = 1, size = 12, color = "white") +
  geom_dag_text(color = "black") +
  geom_dag_edges() + 
  theme_dag() + 
  labs(title = "") +
    theme(plot.title = element_markdown()) 


``` 
:::


## Hva er enheten?


```{r}
#| fig-width: 6
#| fig-height: 5
#| echo: false
#| message: false
#| warning: false
#| fig-align: center

x <- rnorm(n = 100, mean = 0, sd = 1)

y1 <- rnorm(n = 100, mean = x, sd = 1)
y2 <- rnorm(n = 100, mean = x, sd = 0.8)
y3 <- rnorm(n = 100, mean = x, sd = 0.6)
y4 <- rnorm(n = 100, mean = 0, sd = 0.4)
y5 <- rnorm(n = 100, mean = x, sd = 0.2)
y6 <- rnorm(n = 100, mean = -x, sd = 0.1)


m1 <- lm(y1 ~ x)
m2 <- lm(y2 ~ x)
m3 <- lm(y3 ~ x)
m4 <- lm(y4 ~ x)
m5 <- lm(y5 ~ x)
m6 <- lm(y6 ~ x)



df <- data.frame(x, y1, y2, y3, y4, y5, y6) %>% 
  pivot_longer(cols = -x, names_to = "y", values_to = "value") %>%
  mutate(yname = if_else(y == "y1", paste("&beta;<sub>0</sub> = ",round(coef(m1)[1],2), "&beta;<sub>1</sub> = ",round(coef(m1)[2],2)), 
                         if_else(y == "y2", paste("&beta;<sub>0</sub> = ",round(coef(m2)[1],2), "&beta;<sub>1</sub> = ",round(coef(m2)[2],2)), 
                                 if_else(y == "y3", paste("&beta;<sub>0</sub> = ",round(coef(m3)[1],2), "&beta;<sub>1</sub> = ",round(coef(m3)[2],2)),
                                         if_else(y == "y4", paste("&beta;<sub>0</sub> = ",round(coef(m4)[1],2), "&beta;<sub>1</sub> = ",round(coef(m4)[2],2)), 
                                                 if_else(y == "y5", paste("&beta;<sub>0</sub> = ",round(coef(m5)[1],2), "&beta;<sub>1</sub> = ",round(coef(m5)[2],2)), paste("&beta;<sub>0</sub> = ",round(coef(m6)[1],2), "&beta;<sub>1</sub> = ",round(coef(m6)[2],2)))))))) 

df %>%
  ggplot(aes(x, value)) + geom_point() + facet_wrap(yname ~ ., scales = "free_y") + 
  theme(strip.text = element_markdown(size = 8))






```


## 

```{r}
#| fig-width: 6
#| fig-height: 5
#| echo: false
#| message: false
#| warning: false
#| fig-align: center


system_dag %>% 
  tidy_dagitty() %>%

  ggplot(aes(x = x, y = y, xend = xend, yend = yend)) +
  geom_dag_point(alpha = 1, size = 12, color = "white") +
  geom_dag_text(color = "black") +
  geom_dag_edges() + 
  theme_dag() + 
  labs(title = "") +
    theme(plot.title = element_markdown()) 

```


```{r}
#| echo: false

set.seed(1)
z1 <- rnorm(n = 100, mean = 0, sd = 1)
x <- rnorm(n = 100, mean = z1, sd = 0.2)
y <- rnorm(n = 100, mean = z1, sd = 0.2)
z2 <- rnorm(n = 100, mean = x + y, sd = 0.2)
x2 <- rnorm(n = 100, mean = x, sd = 0.2)
z3 <- rnorm(n = 100, mean = x2, sd = 0.2)
y2 <- rnorm(n = 100, mean = z3, sd = 0.2)


simdata <- data.frame(z1, x, y, z2, x2, z3, y2)

write.csv(simdata, "simdata.csv")




```




